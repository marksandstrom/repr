head(ptIL)
nIL
ptIL
head(training)
ptIL=training[nIL]
head(ptIL)
m0 = train(training$diagnosis~.,method='glm',data=ptIL)
confusionMatrix(testing$diagnosis,predict(m0,testing))
m = train(training$diagnosis~.,method='glm',preProcess='pca',data=ptIL)
confusionMatrix(testing$diagnosis,predict(m,testing))
m = train(training$diagnosis~.,method='glm',preProcess='pca',thresh=0.8,data=ptIL)
p80=preProcess(ptIL,method='pca',thresh=0.8,pcaComp=NULL)
head(p80)
head(ptIL)
pred80 = predict(p80,ptIL)
m80 = train(training$diagnosis~.,method='glm',data=pred80)
summary(m80)
testpred80 = predict(p80,ptstIL)
head(ptstIL)
confusionMatrix(testing$diagnosis,predict(m80,testpred80))
m0 = train(training$diagnosis~.,method='glm',data=ptIL)
confusionMatrix(testing$diagnosis,predict(m0,testing))
confusionMatrix(testing$diagnosis,predict(m0,testpred80))
confusionMatrix(testing$diagnosis,predict(m80,testing))
head(testpred80)
head(testing)
confusionMatrix(testing$diagnosis,predict(m0,ptstIL))
head(ptstIL)
confusionMatrix(testing$diagnosis,predict(m0,testing))
confusionMatrix(testing$diagnosis,predict(m0,ptstIL))
p90=preProcess(ptIL,method='pca',thresh=0.9,pcaComp=NULL)
pred90 = predict(p90,ptIL)
m90 = train(training$diagnosis~.,method='glm',data=pred90)
summary(m90)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
names(segmentationOriginal)
table(segmentationOriginal$Case)
i = createDataPartition(y=segmentationOriginal$Case,list=FALSE)
head(i)
tr = segmentationOriginal[i,]
table(tr$Case)
tr = segmentationOriginal[segmentationOriginal$Case="Train",]
tr = segmentationOriginal[segmentationOriginal$Case=="Train",]
table(tr$Case)
tst = segmentationOriginal[segmentationOriginal$Case=="Test",]
table(tst$Case)
set.seed(125)
dim(tst)
dim(tr)
dim(tr);dim(0)
dim(tr);dim(tst)
m = train(Class~.,method='rpart',data=tr)
library(rattle)
install.packages("rattle")
windows()
fancyRpartPlot(m$finalModel)
library(rattle)
library("rattle")
library("rattle")
library(rattle)
ls()
windows()
fancyRpartPlot(m$finalModel)
library(RGtk2)
library(rattle)
summary(m)
fancyRpartPlot(m$finalModel)
print(m$finalModel)
rm(list=ls())
library(pgmm)
data(olive)
olive = olive[,-1]
install.packages("pgmm")
library(pgmm)
data(olive)
olive = olive[,-1]
str(olive)
table(olive$Area)
m = train(Area~.,method='rpart',data=olive)
library(caret)
m = train(Area~.,method='rpart',data=olive)
newdata = as.data.frame(t(colMeans(olive)))
p = predict(m,newdata)
head(p)
p
rm(list=ls())
library(ElemStatLearn)
install.packages("ElemStatLearn")
library(ElemStatLearn)
data(SAheart)
set.seed(8484)
train = sample(1:dim(SAheart)[1],size=dim(SAheart)[1]/2,replace=F)
trainSA = SAheart[train,]
testSA = SAheart[-train,]
set.seed(13234)
m = train(chd~age+alcohol+obesity+tobacco+typea+ldl,method='glm',family='binomial',data=trainSA)
m
missClass = function(values,prediction){sum(((prediction > 0.5)*1) != values)/length(values)}
missClass
missClass(trainSA,predict(m,trainSA))
missClass(testSA,predict(m,testSA))
ptr=predict(m,trainSA)
ptr
str(ptr)
summary(ptr)
summary(trainSA)
str(trainSA)
str(trainSA$chd)
missClass(testSA,predict(m,testSA$chd))
missClass(testSA$chd,predict(m,testSA))
missClass(trainSA$chd,predict(m,trainSA))
rm(list=ls())
?order
?drop
q()
library(randomForest)
source('C:/projects/datasciencecoursera/ML/s.R', echo=TRUE)
rm(list=ls())
setwd("C:\\projects\\datasciencecoursera\\RR\\ex1")
getwd()
nas=c('NA','NaN','',' ','#DIV/0!')
df=read.csv('activity.csv',na.strings=nas)
dim(df)
df=Filter(function(c)!all(is.na(c)),tr)
df=Filter(function(c)!all(is.na(c)),df)
dim(df)
df=df[rowSums(is.na(df))!=ncol(df),]
dim(df)
head(df)
summary(df)
dfs = subset(df,steps!=NA)
dim(df)
dim(dfs)
dfs
dfs = subset(df,steps!='NA')
dim(dfs)
summary(dfs)
head(dfs)
df=subset(df,steps!='NA')
dim(df)
windows()
hist(df$steps)
summary(df$steps)
df[1,]
d1=df[1,]
dit=d1[d1$date:d1$interval]
dit
dim(d1)
dim(dit)
dit[1]
dit[1:2]
dit[2]
paste(dit[1],dit[2])
dit
d1
paste(d1[2],d1[3])
d1
d1[2]
head(df)
dfc = do.call(paste(c(df[c('date','interval')],sep='-')))
df$NewCol = do.call(paste(c(df[c('date','interval')],sep='-')))
df$NewCol = do.call(paste,c(df[c('date','interval')],sep='-'))
head(df)
head(df,100)
df$timestamp=do.call(paste,c(df[c('date','interval')],sep='-'))
summary(df)
df=read.csv('activity.csv')
df=subset(df,steps!='NA')
df$timestamp=do.call(paste,c(df[c('date','interval')],sep='-'))
summary(df)
head(df,200)
df=read.csv('activity.csv')
df=subset(df,steps!='NA')
dfc = complete.cases(df)
dim(df)
dim(dfc)
dfn = na.rm(df)
any(is.na(df))
any(is.infinite(df))
apply(df, 2, function(x) any(is.na(x)))
source('~/.active-rstudio-document', echo=TRUE)
library(plyr)
library(reshape2)
names(df)
rest = ddply(dfc, c('df'), summarise, mean = mean(value))
dim(dfc)
res = ddply(df, c('df'), summarise, mean = mean(value))
res = ddply(df, c('date'), summarise, mean = mean(value))
res = ddply(df, c('date'), summarise, mean = mean(steps))
head(res)
res
df=read.csv('activity.csv')
aves = ddply(df, c('date'), summarise, mean = mean(steps), na.rm=T)
head(aves)
aves = ddply(df, c('date'), summarise, mean = mean(steps))
head(aves)
aves = ddply(df, c('date'), summarise, mean = mean(steps,na.rm=T))
head(aves)
plot(aves$date,aves$mean)
plot(aves$date,aves$mean,type='b')
windows()
plot(aves$date,aves$mean,type='l')
plot(aves$date,aves$mean,type='o')
plot(aves$date,aves$mean,type='o',col='blue')
plot(aves$date,aves$mean,type='o',col='blue',ylab="Steps")
plot(aves$date,aves$mean,type='o',col='blue',xlab='Time',ylab='Steps')
plot(aves$date,aves$mean,type='o',col='blue',xlab='Date',ylab='Steps')
plot(aves$date,aves$mean,col='blue',xlab='Date',ylab='Steps')
plot(aves$date,aves$mean,xlab='date',ylab='steps')
x=1:10
x
y = rnorm(10)
y
plot(x,y,type="l")
plot(x,y,type="l",colour="red")
plot(x,y,type="l",color="red")
plot(x,y,type="l",col="red")
plot(aves$date,aves$mean,type="l",col="red",xlab='date',ylab='steps')
names(df)
intervalaves=ddply(df, c('interval'), summarise, mean=mean(steps), na.rm=T)
summary(intervalaves)
intervalaves=ddply(df, c('interval'), summarise, mean=mean(steps, na.rm=T))
summary(intervalaves)
max(intervalaves$mean)
maxim=max(intervalaves$mean)
maxi=subset(intervalaves,mean=maxim)
maxi
maxim
maxi=subset(intervalaves,mean==maxim)
maxi
maxi=subset(intervalaves,mean==max(intervalaves$mean))
maxi
plot(intervalaves$interval, intervalaves$mean, type='l', col='red', xlab='interval', ylab='steps')
png('plot1.png')
plot(dailyaves$date, dailyaves$mean, type='l', col='blue', xlab='date', ylab='steps')
dev.off()
dailyaves=ddply(df, c('date'), summarise, mean=mean(steps))
png('plot1.png')
plot(dailyaves$date, dailyaves$mean, type='l', col='blue', xlab='date', ylab='steps')
dev.off()
hist(steps,col='green',, ylab='steps per 5-minute intervals')
hist(steps,col='green', ylab='steps per 5-minute intervals')
hist(df$steps,col='green', ylab='steps per 5-minute intervals')
hist(df$steps,col='green', xlab='steps', ylab='count of intervals with the number of steps per x-axis')
windows()
hist(df$steps,col='green', xlab='steps', ylab='count of intervals with the number of steps per x-axis')
rm(list=ls())
source('C:/projects/datasciencecoursera/RR/ex1/project1script.R', echo=TRUE)
head(intervalaves)
interval[15,]
intervalaves[15,]
intervalaves[15,]$mean
steps=dfwna$steps
summary(steps)
dfwnaM = dfwna[is.na(dfwna[,i]), i] <- mean(dfwna[,i], na.rm = TRUE)
stepsM=steps[is.na(steps)]=mean(steps)
summary(steps)
summary(stepsM)
stepsM=steps[is.na(steps)]=mean(steps,na.rm=T)
summary(stepsM)
dfwnaM=dfwna[is.na(dfwna$steps)]=mean(dfwna$steps,na.rm=T)
dfwnaM=dfwna[is.na(steps)]=mean(steps,na.rm=T)
summary(dfwna)
dfwim=dfwna[is.na(steps)]=intervalaves(intervalaves$interval==interval)
dfwim=dfwna[is.na(steps)]=intervalaves[intervalaves$interval==interval]$mean
dfwim=dfwna[is.na(steps)]=intervalaves[interval]$mean
intervalaves[4]$mean
intervalaves[5]$mean
head(intervalaves)
intervalaves[5]
intervalaves[5,]
intervalaves[5,]$mean
dfwim=dfwna[is.na(steps)]=intervalaves[interval,]$mean
dfwim=dfwna[is.na(steps)]=intervalaves[dfwna$interval,]$mean
dim(dfwna)
dim(dfwim)
dfwX=dfwna[is.na(steps)]=dfwna$interval
dim(dfwX)
dfwX
dfwm=dfwna[is.na(steps)]=mean(steps,na.rm=T)
dim(dfwm)
dim(dfwna)
head(dfwm)
length(dfwm)
dfwm
dfwim=dfwna$steps[is.na(dfwna$steps)]=with(dfwna, ave(steps, interval,
FUN = function(x) mean(x, na.rm = T)))[is.na(dfwna$steps)]
head(dfwm)
length(dfwm)
dim(dfwna)
dfwm
dim(df)
dfim
dfim=df
dim(dfim)
dfim$steps[is.na($steps)] = with(dfim, ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)))[is.na(dfim$value)]
dfim$steps[is.na(dfim$steps)] = with(dfim, ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)))[is.na(dfim$value)]
dfim$steps[is.na(dfim$steps)] = with(dfim, ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)))[is.na(dfim$steps)]
dim(dfim)
dfim$steps[is.na(dfim$steps)] = with(dfim, ave(steps, interval, f = function(x) mean(x, na.rm=T)))[is.na(dfim$steps)]
dfim$steps[is.na(dfim$steps)] = with(dfim, ave(steps, interval, FUN = function(x) mean(x, na.rm=T)))[is.na(dfim$steps)]
head(df)
dfwna=read.csv('activity.csv')
dfim=dfwna
dfim$steps[is.na(dfim$steps)] = with(dfim, ave(steps, interval, FUN = function(x) mean(x, na.rm=T)))[is.na(dfim$steps)]
head(dfwna)
head(dfwna,20)
head(dfwna,200)
tail(dfwna,200)
summary(dfwna)
any(is.na(dfwim))
any(is.na(dfwna))
dfwim(1000:1020,)
dfim(1000:1020,)
dfim[1000:1020,]
dfim[400:420,]
dfim[200:320,]
dfim[100:120,]
dfim[40:50,]
dfim[20:50,]
dfim[0:20,]
head(dfim[0:20,])
head(dfim)
head(dfwna[0:20,])
dfwna[0:20,]
dfwna[400:420,]
dfwna[200:220,]
dfwna[300:320,]
dfwna[200:270,]
dfwna[270:300,]
intervalaves[290,]$mean
intervalaves[290,]
head(intervalaves)
any(is.na(intervalaves))
intervalaves[1,]
intervalaves[40,]
intervalaves[289,]
dim(intervalaves)
windows()
plot(intervalaves$interval, intervalaves$mean, type='l', col='red', xlab='interval', ylab='mean steps')
summary(intervalaves)
head(intervalaves,20)
head(intervalaves,300)
summary(dfim)
dfwna[270:300,]
dfwna[280:300,]
dfim[280:300,]
dfim[280:290,]
dfwn[280:290,]
dfwna[280:290,]
dfim[280:290,]
intervalaves[2315,]$mean
intervalaves[280,]$mean
intervalaves[281,]$mean
dfim[280:290,]
intervalaves[289,]$mean
intervalaves[0,]$mean
intervalaves[1,]$mean
intervalaves[2,]$mean
dfim[1:2,]
dfwna[1:2,]
hist(df$steps,col='green', xlab='steps', ylab='count of intervals')
hist(dfim$steps,col='blue', xlab='steps', ylab='count of intervals')
dailytotals=ddply(df, c('date'), summarise, totals=sum(steps))
hist(dailytotals, col='green', xlab='steps (ingoring NAs)', ylab='count of intervals')
head(dailytotals)
hist(dailytotals$totals, col='green', xlab='daily-totals of steps (ingoring NAs)', ylab='count of days with the given daily-total')
dailytotalsim=ddply(dfim, c('date'), summarise, totals=sum(steps))
hist(dailytotalsim$steps, col='blue', xlab='steps (NAs replaced by means for the interval)', ylab='count of intervals')
hist(dailytotalsim$totals, col='blue', xlab='steps (NAs replaced by means for the interval)', ylab='count of intervals')
x
x=1:10
y=rnorm(10)
lines(x,y)
windows()
lines(x,y)
plot.new
plot.new()
lines(x,y)
dfwna=read.csv('activity.csv')
df=subset(dfwna,steps!='NA')
dailytotals=ddply(df, c('date'), summarise, totals=sum(steps))
dailyaves=ddply(df, c('date'), summarise, mean=mean(steps))
plot.new()
windows()
plot.new()
lines(dailyaves$date, dailyaves$mean, type='l', col='blue', xlab='date', ylab='mean steps per 5-minute intervals'))
lines(dailyaves$date, dailyaves$mean, type='l', col='blue', xlab='date', ylab='mean steps per 5-minute intervals')
lines(x, y, type='l', col='blue', xlab='date', ylab='mean steps per 5-minute intervals')
plot(dailyaves$date, dailyaves$mean, type='l', col='blue', xlab='date', ylab='mean steps per 5-minute intervals')
lines(dailyaves$date, dailyaves$mean, type='l', col='blue')
windows()
plot(dailyaves$date, dailyaves$mean, xlab='date', ylab='mean steps per 5-minute intervals')
lines(dailyaves$date, dailyaves$mean)
lines(dailyaves$date, dailyaves$mean)
rm(list=ls())
source('C:/projects/datasciencecoursera/RR/ex1/project1script.R', echo=TRUE)
source('C:/projects/datasciencecoursera/RR/ex1/project1script.R', echo=TRUE)
head(df)
df[1,]$date
class(df[1,]$date)
dt1=df[1,]$date
isWeekday(dt1)
timeDate::isWeekday(dt1)
mutate(mtcars, displ_l = disp / 61.0237)
dfwd=mutate(df, wd=timeDate::isWeekday(date))
head(dfwd)
tail(dfwd)
summary(dfwd)
dfwe=subset(dfwd,wd=T)
head(dfwe)
dfwe=subset(dfwd,wd=F)
head(dfwe)
summary(dfwd)
subset(dfwd,wd=FALSE)
names(wd)
names(dfwd)
dim(subset(dfwd,wd=FALSE))
dim(subset(dfwd,wd=TRUE))
dfwd=mutate(df, wd=timeDate::isWeekday(date))
dfwe=subset(dfwd,wd==F)
dfwk=subset(dfwd,wd==T)
summary(dfwe)
summary(dfwk)
png(filename='plot5.png',width=480,height=480)
par(mfrow=c(2,1))
intervalaves=ddply(dfwk, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Mon-Fri mean steps')
intervalaves=ddply(dfwe, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Sat-Sun mean steps')
plot(x, y, 'l', xlab='', ylab='')
dev.off()
png(filename='plot5.png',width=480,height=480)
par(mfrow=c(2,1))
intervalaves=ddply(dfwk, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Mon-Fri mean steps')
intervalaves=ddply(dfwe, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Sat-Sun mean steps')
dev.off()
png(filename='plot5.png')
par(mfrow=c(2,1))
intervalaves=ddply(dfwk, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Mon-Fri mean steps')
intervalaves=ddply(dfwe, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='green', xlab='interval', ylab='Sat-Sun mean steps')
dev.off()
png(filename='plot5.png')
par(mfrow=c(2,1))
intervalaves=ddply(dfwk, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Mon-Fri mean steps')
intervalaves=ddply(dfwe, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='green', xlab='interval', ylab='Sat-Sun mean steps',widht=3)
dev.off()
png(filename='plot5.png')
par(mfrow=c(2,1))
intervalaves=ddply(dfwk, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Mon-Fri mean steps')
intervalaves=ddply(dfwe, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='green', xlab='interval', ylab='Sat-Sun mean steps',width=3)
dev.off()
png(filename='plot5.png')
par(mfrow=c(2,1))
intervalaves=ddply(dfwk, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Mon-Fri mean steps')
intervalaves=ddply(dfwe, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='green', xlab='interval', ylab='Sat-Sun mean steps',lwd=4)
dev.off()
dev.off()
png(filename='plot5.png')
par(mfrow=c(2,1))
intervalaves=ddply(dfwk, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='red', xlab='interval', ylab='Mon-Fri mean steps',lwd=1)
intervalaves=ddply(dfwe, c('interval'), summarise, mean=mean(steps))
plot(intervalaves$interval, intervalaves$mean, 'l', col='green', xlab='interval', ylab='Sat-Sun mean steps',lwd=3)
dev.off()
dailyaves=ddply(df, c('date'), summarise, mean=mean(steps))
png('plot2.png')
plot(dailyaves$date, dailyaves$mean, 'l', xlab='date', ylab='daily averages of steps for 5-minute intervals (omitting NAs)')
#lines(dailyaves$date, dailyaves$mean)
dev.off()
dailyaves=ddply(df, c('date'), summarise, mean=mean(steps), median=median(steps))
png('plot2.png')
plot(dailyaves$date, dailyaves$mean, xlab='date', ylab='daily averages of steps for 5-minute intervals (omitting NAs)')
lines(dailyaves$date, dailyaves$mean)
lines(dailyaves$date, dailyaves$median, col='red')
dev.off()
steps=df$steps
median(steps)
dailyaves=ddply(df, c('date'), summarise, mean=mean(steps), median=median(steps))
dailyaves$mean
dailyaves$median
length(dailyaves$median)
summary(dailyaves$median)
summary(dailyaves$mean)
summary(round(dailyaves$mean),1)
summary(round(dailyaves$mean),0)
summary(round(dailyaves$mean),2)
summary(round(dailyaves$mean),3)
summary(round(dailyaves$mean),5)
summary(round(dailyaves$mean),)
summary(round(dailyaves$mean))
str(df)
summary(df)
24*60/5
head(df,20)
24*12
head(df,50)
24*60-5
24*60
source('C:/projects/datasciencecoursera/RR/ex1/project1script.R', echo=TRUE)
